name: CI & Build Linux Binary

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      VCPKG_FEATURE_FLAGS: "dependencygraph"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git vcpkg
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Restore vcpkg cache
        uses: actions/cache@v3
        with:
          path: |
            vcpkg_installed
            ~/.cache/vcpkg
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Install dependencies
        run: ./vcpkg/vcpkg install --triplet x64-linux

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake \
            -DVCPKG_TARGET_TRIPLET=x64-linux \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Package binary
        run: |
          cd build
          tar -czf discordbot-linux.tar.gz discordbot

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: discordbot-linux
          path: build/discordbot-linux.tar.gz
