name: CI & Build Linux Binary

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    env:
      VCPKG_FEATURE_FLAGS: "dependencygraph"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore vcpkg cache
        uses: actions/cache@v3
        with:
          path: |
            vcpkg_installed
            ~/.cache/vcpkg
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Set up vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake \
            -DVCPKG_TARGET_TRIPLET=x64-linux-release \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Package binary with shared libraries
        run: |
          mkdir -p build/package/lib
          cp build/discordbot build/package/

          # 必要な共有ライブラリだけを lib にコピー（libdpp.so など）
          ldd build/discordbot | awk '{print $3}' | grep '^/' | egrep 'libdpp|libboost|libprotobuf' | xargs -I{} cp -v {} build/package/lib/ || true

          # 実行時に lib ディレクトリから共有ライブラリを探すように rpath を設定
          patchelf --set-rpath '$ORIGIN/lib' build/package/discordbot

          cd build/package
          tar -czf ../discordbot-linux.tar.gz *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: discordbot-linux
          path: build/discordbot-linux.tar.gz

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to ConoHa VPS
        run: |
          scp build/discordbot-linux.tar.gz ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "\
            mkdir -p ~/discordbot && \
            tar -xzf /tmp/discordbot-linux.tar.gz -C ~/discordbot && \
            rm /tmp/discordbot-linux.tar.gz && \
            sudo systemctl restart discordbot.service"
